{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Legates\\\\Desktop\\\\Projects\\\\react\\\\investment-calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './components/Header/Header';\nimport InputForm from './components/InputForm/InputForm';\nimport InvestmentData from './components/InvesmentData/InvesmentData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyData, SetYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    const INITAL_ARR = [];\n    let currentSavings = +userInput.currentSavings;\n    const yearlyContribution = +userInput.yearlyContriburion;\n    const expectedReturn = +userInput.expectedReturn / 100;\n    const duration = +userInput.duration;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      INITAL_ARR.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    SetYearlyData(prevState => [...prevState, ...{\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logo: logo,\n      alt: 'logo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvestmentData, {\n      yearlyData: yearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MfhGS1Ktuq6q9pLWWrU1l2l6gfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","Header","InputForm","InvestmentData","jsxDEV","_jsxDEV","App","_s","yearlyData","SetYearlyData","calculateHandler","userInput","INITAL_ARR","currentSavings","yearlyContribution","yearlyContriburion","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","prevState","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Legates/Desktop/Projects/react/investment-calculator/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport logo from './assets/investment-calculator-logo.png'\nimport Header from './components/Header/Header'\nimport InputForm from './components/InputForm/InputForm'\nimport InvestmentData from './components/InvesmentData/InvesmentData'\n\nfunction App() {\n  const [yearlyData, SetYearlyData] = useState([])\n\n  const calculateHandler = (userInput) => {\n    const INITAL_ARR = []\n\n    let currentSavings = +userInput.currentSavings\n    const yearlyContribution = +userInput.yearlyContriburion\n    const expectedReturn = +userInput.expectedReturn / 100\n    const duration = +userInput.duration\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn\n      currentSavings += yearlyInterest + yearlyContribution\n      INITAL_ARR.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      })\n    }\n    SetYearlyData((prevState) => [\n      ...prevState,\n      ...{\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      },\n    ])\n  }\n\n  return (\n    <div>\n      <Header logo={logo} alt={'logo'} />\n      <InputForm calculateHandler={calculateHandler} />\n      <InvestmentData yearlyData={yearlyData} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,cAAc,MAAM,0CAA0C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,UAAU,GAAG,EAAE;IAErB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAACE,cAAc;IAC9C,MAAMC,kBAAkB,GAAG,CAACH,SAAS,CAACI,kBAAkB;IACxD,MAAMC,cAAc,GAAG,CAACL,SAAS,CAACK,cAAc,GAAG,GAAG;IACtD,MAAMC,QAAQ,GAAG,CAACN,SAAS,CAACM,QAAQ;IAEpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGN,cAAc,GAAGG,cAAc;MACtDH,cAAc,IAAIM,cAAc,GAAGL,kBAAkB;MACrDF,UAAU,CAACQ,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAET,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAL,aAAa,CAAEc,SAAS,IAAK,CAC3B,GAAGA,SAAS,EACZ,GAAG;MACDF,IAAI,EAAEH,CAAC,GAAG,CAAC;MACXC,cAAc,EAAEA,cAAc;MAC9BG,gBAAgB,EAAET,cAAc;MAChCC,kBAAkB,EAAEA;IACtB,CAAC,CACF,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAACD,IAAI,EAAEA,IAAK;MAACyB,GAAG,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCxB,OAAA,CAACH,SAAS;MAACQ,gBAAgB,EAAEA;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDxB,OAAA,CAACF,cAAc;MAACK,UAAU,EAAEA;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACtB,EAAA,CAvCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAyCZ,eAAeA,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}